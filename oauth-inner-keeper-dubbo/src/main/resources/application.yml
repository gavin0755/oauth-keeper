server:
   tomcat:
      basedir: tmp/oauth-inner-keeper-dubbo
      uri-encoding: UTF-8
      min-spare-threads: 7 # Minimum amount of worker threads.
      max-http-post-size: 100MB # Maximum size of the HTTP post content.
      max-connections: 10000 # Maximum number of connections that the server accepts and processes at any given time.
      max-threads: 200 # Maximum amount of worker threads.
      max-swallow-size: 100MB # Maximum amount of request body to swallow.

spring:
   application:
      name: oauth-inner-keeper-dubbo
   redis:
      database: 0 #索引（默认为0）
      host: 127.0.0.1 #地址
      port: 6379 #端口号
      #password:  #连接密码（默认空）
      timeout: 6000
      pool:
         max-idle: 8 #连接池中的最大空闲连接
         min-idle: 0 #连接池中的最小空闲连接
         max-active: 8 #连接池最大连接数（使用负值表示没有限制）
         max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
   datasource:
      url: jdbc:mysql://127.0.0.1:3306/mc_oauth?useUnicode=true&characterEncoding=utf-8&connectTimeout=60000&socketTimeout=60000
      username: root
      password: hy190418
      driver-class-name: com.mysql.cj.jdbc.Driver #com.mysql.jdbc.Driver
      #pool-size: 30
      #maximum-pool-size: 30
      type: com.alibaba.druid.pool.DruidDataSource
      #type:
      druid: #https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8；https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
         initial-size: 3 #初始化时建立物理连接的个数，默认0。初始化发生在显示调用init方法，或者第一次getConnection时
         max-active: 8 #最大连接池数量，默认8
         min-idle: 3 #最小连接池数量
         max-wait: 60000 #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
         use-unfair-lock: true
         validation-query: select 'x' #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
         validation-query-timeout: 10 #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
         test-on-borrow: false #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
         test-on-return: false #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
         test-while-idle: true #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
         pool-prepared-statements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
         time-between-eviction-runs-millis: 60000 #有两个含义： 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
         min-evictable-idle-time-millis: 300000 #连接保持空闲而不被驱逐的最小时间
         connection-init-sqls: SET names utf8mb4 #物理连接初始化的时候执行的sql，支持emoji表情符
         filters: stat,wall,slf4j #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat；;日志用的filter:log4j；防御sql注入的filter:wall
         proxy-filters: #类型是List<com.alibaba.druid.filter.Filter>，如果同时配置了filters和proxyFilters，是组合关系，并非替换关系
            stat:
               db-type: mysql
               log-slow-sql: true
               slow-sql-millis: 2000
            wall:
               enabled: true
               db-type: mysql
               config:
                  delete-allow: false
                  drop-table-allow: false
                  log-violation: true
         aop-patterns: com.oauth.vip.mapper.* # Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置*

#apache接手dubbo之后需要单独配置
dubbo: 
   server: true
   registry: 
      address: zookeeper://127.0.0.1:2181
      check: false
   protocol: 
      name: dubbo
      host: 192.168.0.209 #docker避免dubbo注册其他地址
      port: 20885
      serialization: kryo #指定序列化方式
   application: 
      name: oauth-inner-keeper-dubbo
      qosPort: 22226

mybatis:
   type-aliases-package: com.oauth.vip.pojo
   type-handlers-package: com.oauth.vip.mapper
   configuration:
      map-underscore-to-camel-case: true
      auto-mapping-behavior: PARTIAL
      default-statement-timeout: 30
      default-fetch-size: 100
      local-cache-scope: STATEMENT
      jdbc-type-for-null: NULL
#pagehelper分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

logging:
   config: classpath:logback.xml
   level:
      root: INFO
      org.springframework.web: DEBUG